{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianni/Downloads/Arise-webgame/web-game/frontend/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored auth token on app start\n    const token = localStorage.getItem('arise_token');\n    const userData = localStorage.getItem('arise_user');\n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser({\n          ...parsedUser,\n          access_token: token\n        });\n        apiService.setAuthToken(token);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('arise_token');\n        localStorage.removeItem('arise_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await apiService.login(username, password);\n      const userData = {\n        player_id: response.player_id,\n        username: response.username,\n        access_token: response.access_token\n      };\n      setUser(userData);\n      localStorage.setItem('arise_token', response.access_token);\n      localStorage.setItem('arise_user', JSON.stringify({\n        player_id: response.player_id,\n        username: response.username\n      }));\n      apiService.setAuthToken(response.access_token);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      await apiService.register(username, email, password);\n      // After successful registration, automatically log in\n      await login(username, password);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('arise_token');\n    localStorage.removeItem('arise_user');\n    apiService.setAuthToken(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","access_token","setAuthToken","error","console","removeItem","login","username","password","response","player_id","setItem","stringify","register","email","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/sebastianni/Downloads/Arise-webgame/web-game/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { apiService } from '../services/api';\n\ninterface User {\n  player_id: string;\n  username: string;\n  access_token: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored auth token on app start\n    const token = localStorage.getItem('arise_token');\n    const userData = localStorage.getItem('arise_user');\n    \n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser({ ...parsedUser, access_token: token });\n        apiService.setAuthToken(token);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('arise_token');\n        localStorage.removeItem('arise_user');\n      }\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await apiService.login(username, password);\n      const userData = {\n        player_id: response.player_id,\n        username: response.username,\n        access_token: response.access_token\n      };\n      \n      setUser(userData);\n      localStorage.setItem('arise_token', response.access_token);\n      localStorage.setItem('arise_user', JSON.stringify({\n        player_id: response.player_id,\n        username: response.username\n      }));\n      \n      apiService.setAuthToken(response.access_token);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      await apiService.register(username, email, password);\n      // After successful registration, automatically log in\n      await login(username, password);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('arise_token');\n    localStorage.removeItem('arise_user');\n    apiService.setAuthToken(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}