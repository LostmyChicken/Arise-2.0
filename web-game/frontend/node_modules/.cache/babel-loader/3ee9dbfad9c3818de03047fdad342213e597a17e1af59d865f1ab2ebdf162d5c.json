{"ast":null,"code":"import _objectSpread from\"/Users/sebastianni/Downloads/Arise-webgame/web-game/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{HeartIcon,ShieldCheckIcon,FireIcon,SparklesIcon}from'@heroicons/react/24/outline';import{useAuth}from'../hooks/useAuth';import api from'../services/api';import{getRandomBoss}from'../constants/images';import GameBackground from'../components/GameBackground';// Custom SwordIcon for attacks\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SwordIcon=_ref=>{let{className}=_ref;return/*#__PURE__*/_jsx(\"svg\",{className:className,fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"})});};const BattlePage=()=>{const{user}=useAuth();const[monsters,setMonsters]=useState([]);const[battleState,setBattleState]=useState(null);const[loading,setLoading]=useState(false);const[battleLog,setBattleLog]=useState([]);const[animating,setAnimating]=useState(false);useEffect(()=>{loadMonsters();},[]);const loadMonsters=async()=>{try{const response=await api.get('/battle/monsters');setMonsters(response.data.monsters);}catch(error){console.error('Failed to load monsters:',error);// Mock data for demo\nsetMonsters([{id:1,name:\"Goblin Warrior\",level:5,rank:\"E\",health:80,attack:15,defense:8,experience_reward:25,gold_reward:50,image_url:\"/images/monsters/goblin.png\"},{id:2,name:\"Orc Berserker\",level:8,rank:\"D\",health:120,attack:25,defense:12,experience_reward:40,gold_reward:80,image_url:\"/images/monsters/orc.png\"},{id:3,name:\"Shadow Beast\",level:12,rank:\"C\",health:180,attack:35,defense:18,experience_reward:60,gold_reward:120,image_url:\"/images/monsters/shadow_beast.png\"}]);}};const startBattle=async monsterId=>{setLoading(true);try{const response=await api.post('/battle/start',{monster_id:monsterId});setBattleState(response.data);setBattleLog([response.data.message]);}catch(error){var _error$response,_error$response$data;console.error('Failed to start battle:',error);setBattleLog([((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Failed to start battle']);// Mock battle for demo\nconst monster=monsters.find(m=>m.id===monsterId);if(monster){setBattleState({battle_id:Date.now(),status:'active',turn:1,hunter_health:100,monster_health:monster.health,hunter:{id:1,name:(user===null||user===void 0?void 0:user.username)||'Hunter',level:10,max_health:100,attack:20,defense:10},monster:{id:monster.id,name:monster.name,level:monster.level,rank:monster.rank,max_health:monster.health,attack:monster.attack,defense:monster.defense},battle_log:[]});setBattleLog([\"Battle started against \".concat(monster.name,\"!\")]);}}setLoading(false);};const performAction=async action=>{if(!battleState||animating)return;setAnimating(true);try{const response=await api.post(\"/battle/\".concat(battleState.battle_id,\"/action\"),{action:action});setBattleState(response.data);// Add battle actions to log\nif(response.data.last_actions){const newLogs=response.data.last_actions.map(action=>action.message);setBattleLog(prev=>[...prev,...newLogs]);}// Check if battle ended\nif(response.data.status!=='active'){if(response.data.rewards){setBattleLog(prev=>[...prev,\"Battle ended! Rewards: \".concat(response.data.rewards.experience,\" EXP, \").concat(response.data.rewards.gold,\" Gold\")]);}}}catch(error){console.error('Failed to perform action:',error);// Mock battle action for demo\nconst newState=_objectSpread({},battleState);let actionMessage='';if(action==='attack'){const damage=Math.floor(Math.random()*20)+10;newState.monster_health=Math.max(0,newState.monster_health-damage);actionMessage=\"You attack \".concat(newState.monster.name,\" for \").concat(damage,\" damage!\");if(newState.monster_health<=0){newState.status='won';setBattleLog(prev=>[...prev,actionMessage,'Victory! You defeated the monster!']);}else{// Monster counter-attack\nconst monsterDamage=Math.floor(Math.random()*15)+5;newState.hunter_health=Math.max(0,newState.hunter_health-monsterDamage);setBattleLog(prev=>[...prev,actionMessage,\"\".concat(newState.monster.name,\" attacks you for \").concat(monsterDamage,\" damage!\")]);if(newState.hunter_health<=0){newState.status='lost';setBattleLog(prev=>[...prev,'Defeat! You have been defeated...']);}}}else if(action==='skill'){const damage=Math.floor(Math.random()*30)+20;newState.monster_health=Math.max(0,newState.monster_health-damage);actionMessage=\"You use Shadow Strike for \".concat(damage,\" damage!\");setBattleLog(prev=>[...prev,actionMessage]);}else if(action==='item'){const heal=Math.min(50,100-newState.hunter_health);newState.hunter_health+=heal;actionMessage=\"You use a Health Potion and recover \".concat(heal,\" HP!\");setBattleLog(prev=>[...prev,actionMessage]);}else if(action==='flee'){newState.status='fled';setBattleLog(prev=>[...prev,'You fled from battle!']);}newState.turn+=1;setBattleState(newState);}setTimeout(()=>setAnimating(false),1000);};const resetBattle=()=>{setBattleState(null);setBattleLog([]);};const getRankColor=rank=>{const colors={'E':'text-gray-400','D':'text-green-400','C':'text-blue-400','B':'text-purple-400','A':'text-yellow-400','S':'text-red-400'};return colors[rank]||'text-gray-400';};const getHealthPercentage=(current,max)=>{return Math.max(0,current/max*100);};if(battleState){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen p-4 md:p-6 lg:p-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-2 text-white\",children:\"\\u2694\\uFE0F Battle Arena\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-purple-300\",children:[\"Turn \",battleState.turn]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card bg-gradient-to-br from-blue-800/20 to-blue-900/20 border-blue-500/30\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-24 h-24 mx-auto mb-4 rounded-full bg-blue-600 flex items-center justify-center \".concat(animating?'animate-pulse':''),children:/*#__PURE__*/_jsx(SwordIcon,{className:\"w-12 h-12 text-white\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-white\",children:battleState.hunter.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-blue-300\",children:[\"Level \",battleState.hunter.level]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm mb-1 text-gray-300\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Health\"}),/*#__PURE__*/_jsxs(\"span\",{children:[battleState.hunter_health,\"/\",battleState.hunter.max_health]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-700 rounded-full h-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-500 h-3 rounded-full transition-all duration-500\",style:{width:\"\".concat(getHealthPercentage(battleState.hunter_health,battleState.hunter.max_health),\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2 text-sm text-gray-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(SwordIcon,{className:\"w-4 h-4 mr-1 text-red-400\"}),/*#__PURE__*/_jsx(\"span\",{children:battleState.hunter.attack})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(ShieldCheckIcon,{className:\"w-4 h-4 mr-1 text-blue-400\"}),/*#__PURE__*/_jsx(\"span\",{children:battleState.hunter.defense})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card bg-gradient-to-br from-purple-800/20 to-purple-900/20 border-purple-500/30\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold mb-4 text-center text-white\",children:\"Actions\"}),battleState.status==='active'?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>performAction('attack'),disabled:animating,className:\"w-full bg-red-600 hover:bg-red-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center text-white\",children:[/*#__PURE__*/_jsx(SwordIcon,{className:\"w-5 h-5 mr-2\"}),\"Attack\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>performAction('skill'),disabled:animating,className:\"w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center text-white\",children:[/*#__PURE__*/_jsx(SparklesIcon,{className:\"w-5 h-5 mr-2\"}),\"Shadow Strike (20 MP)\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>performAction('item'),disabled:animating,className:\"w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center text-white\",children:[/*#__PURE__*/_jsx(HeartIcon,{className:\"w-5 h-5 mr-2\"}),\"Health Potion (50 Gold)\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>performAction('flee'),disabled:animating,className:\"w-full bg-yellow-600 hover:bg-yellow-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors text-white\",children:\"Flee Battle\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xl mb-4 text-white\",children:battleState.status==='won'?'🎉 Victory!':battleState.status==='lost'?'💀 Defeat!':battleState.status==='fled'?'🏃 Fled!':'Battle Ended'}),/*#__PURE__*/_jsx(\"button\",{onClick:resetBattle,className:\"bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg font-semibold transition-colors text-white\",children:\"New Battle\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card bg-gradient-to-br from-red-800/20 to-red-900/20 border-red-500/30\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-24 h-24 mx-auto mb-4 rounded-full bg-red-600 flex items-center justify-center \".concat(animating?'animate-bounce':''),children:/*#__PURE__*/_jsx(FireIcon,{className:\"w-12 h-12 text-white\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-white\",children:battleState.monster.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"\".concat(getRankColor(battleState.monster.rank),\" font-semibold\"),children:[\"Rank \",battleState.monster.rank,\" \\u2022 Level \",battleState.monster.level]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm mb-1 text-gray-300\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Health\"}),/*#__PURE__*/_jsxs(\"span\",{children:[battleState.monster_health,\"/\",battleState.monster.max_health]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-700 rounded-full h-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-500 h-3 rounded-full transition-all duration-500\",style:{width:\"\".concat(getHealthPercentage(battleState.monster_health,battleState.monster.max_health),\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2 text-sm text-gray-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(SwordIcon,{className:\"w-4 h-4 mr-1 text-red-400\"}),/*#__PURE__*/_jsx(\"span\",{children:battleState.monster.attack})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(ShieldCheckIcon,{className:\"w-4 h-4 mr-1 text-blue-400\"}),/*#__PURE__*/_jsx(\"span\",{children:battleState.monster.defense})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold mb-4 text-white\",children:\"Battle Log\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-900/50 rounded-lg p-4 h-40 overflow-y-auto\",children:battleLog.map((log,index)=>/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-300 mb-1\",children:log},index))})]})]})});}return/*#__PURE__*/_jsx(GameBackground,{variant:\"battle\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-4 md:p-6 lg:p-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-4 text-white\",children:\"\\u2694\\uFE0F Battle Arena\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-purple-300 text-lg\",children:\"Choose your opponent and prove your strength!\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:monsters.map(monster=>/*#__PURE__*/_jsxs(\"div\",{className:\"card hover:border-purple-500/50 transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-20 h-20 mx-auto mb-4\",children:/*#__PURE__*/_jsx(\"img\",{src:getRandomBoss(),alt:monster.name,className:\"w-full h-full character-image battle-character object-cover\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold mb-2 text-white\",children:monster.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"\".concat(getRankColor(monster.rank),\" font-semibold mb-1\"),children:[\"Rank \",monster.rank]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-400\",children:[\"Level \",monster.level]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 mb-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center bg-gray-700/50 rounded-lg p-2\",children:[/*#__PURE__*/_jsx(HeartIcon,{className:\"w-4 h-4 mr-1 text-green-400\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-300\",children:[monster.health,\" HP\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center bg-gray-700/50 rounded-lg p-2\",children:[/*#__PURE__*/_jsx(SwordIcon,{className:\"w-4 h-4 mr-1 text-red-400\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-300\",children:[monster.attack,\" ATK\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700/30 rounded-lg p-3 mb-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-400 mb-1\",children:\"Rewards:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-blue-400\",children:[monster.experience_reward,\" EXP\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-yellow-400\",children:[monster.gold_reward,\" Gold\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>startBattle(monster.id),disabled:loading,className:\"w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors text-white\",children:loading?'Starting...':'Challenge'})]},monster.id))}),monsters.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-12\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-lg\",children:\"Loading monsters...\"})})]})})});};export default BattlePage;","map":{"version":3,"names":["React","useState","useEffect","HeartIcon","ShieldCheckIcon","FireIcon","SparklesIcon","useAuth","api","getRandomBoss","GameBackground","jsx","_jsx","jsxs","_jsxs","SwordIcon","_ref","className","fill","stroke","viewBox","children","strokeLinecap","strokeLinejoin","strokeWidth","d","BattlePage","user","monsters","setMonsters","battleState","setBattleState","loading","setLoading","battleLog","setBattleLog","animating","setAnimating","loadMonsters","response","get","data","error","console","id","name","level","rank","health","attack","defense","experience_reward","gold_reward","image_url","startBattle","monsterId","post","monster_id","message","_error$response","_error$response$data","detail","monster","find","m","battle_id","Date","now","status","turn","hunter_health","monster_health","hunter","username","max_health","battle_log","concat","performAction","action","last_actions","newLogs","map","prev","rewards","experience","gold","newState","_objectSpread","actionMessage","damage","Math","floor","random","max","monsterDamage","heal","min","setTimeout","resetBattle","getRankColor","colors","getHealthPercentage","current","style","width","onClick","disabled","log","index","variant","src","alt","length"],"sources":["/Users/sebastianni/Downloads/Arise-webgame/web-game/frontend/src/pages/BattlePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  HeartIcon,\n  ShieldCheckIcon,\n  FireIcon,\n  SparklesIcon\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '../hooks/useAuth';\nimport api from '../services/api';\nimport { IMAGES, getRandomBoss, getRandomCharacter } from '../constants/images';\nimport GameBackground from '../components/GameBackground';\n\n// Custom SwordIcon for attacks\nconst SwordIcon = ({ className }: { className?: string }) => (\n  <svg className={className} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n  </svg>\n);\n\ninterface Monster {\n  id: number;\n  name: string;\n  level: number;\n  rank: string;\n  health: number;\n  attack: number;\n  defense: number;\n  experience_reward: number;\n  gold_reward: number;\n  image_url: string;\n}\n\ninterface BattleState {\n  battle_id: number;\n  status: string;\n  turn: number;\n  hunter_health: number;\n  monster_health: number;\n  hunter: any;\n  monster: any;\n  battle_log: any[];\n}\n\nconst BattlePage: React.FC = () => {\n  const { user } = useAuth();\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [battleState, setBattleState] = useState<BattleState | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [battleLog, setBattleLog] = useState<string[]>([]);\n  const [animating, setAnimating] = useState(false);\n\n  useEffect(() => {\n    loadMonsters();\n  }, []);\n\n  const loadMonsters = async () => {\n    try {\n      const response = await api.get('/battle/monsters');\n      setMonsters(response.data.monsters);\n    } catch (error) {\n      console.error('Failed to load monsters:', error);\n      // Mock data for demo\n      setMonsters([\n        {\n          id: 1,\n          name: \"Goblin Warrior\",\n          level: 5,\n          rank: \"E\",\n          health: 80,\n          attack: 15,\n          defense: 8,\n          experience_reward: 25,\n          gold_reward: 50,\n          image_url: \"/images/monsters/goblin.png\"\n        },\n        {\n          id: 2,\n          name: \"Orc Berserker\",\n          level: 8,\n          rank: \"D\",\n          health: 120,\n          attack: 25,\n          defense: 12,\n          experience_reward: 40,\n          gold_reward: 80,\n          image_url: \"/images/monsters/orc.png\"\n        },\n        {\n          id: 3,\n          name: \"Shadow Beast\",\n          level: 12,\n          rank: \"C\",\n          health: 180,\n          attack: 35,\n          defense: 18,\n          experience_reward: 60,\n          gold_reward: 120,\n          image_url: \"/images/monsters/shadow_beast.png\"\n        }\n      ]);\n    }\n  };\n\n  const startBattle = async (monsterId: number) => {\n    setLoading(true);\n    try {\n      const response = await api.post('/battle/start', {\n        monster_id: monsterId\n      });\n      \n      setBattleState(response.data);\n      setBattleLog([response.data.message]);\n    } catch (error: any) {\n      console.error('Failed to start battle:', error);\n      setBattleLog([error.response?.data?.detail || 'Failed to start battle']);\n      \n      // Mock battle for demo\n      const monster = monsters.find(m => m.id === monsterId);\n      if (monster) {\n        setBattleState({\n          battle_id: Date.now(),\n          status: 'active',\n          turn: 1,\n          hunter_health: 100,\n          monster_health: monster.health,\n          hunter: {\n            id: 1,\n            name: user?.username || 'Hunter',\n            level: 10,\n            max_health: 100,\n            attack: 20,\n            defense: 10\n          },\n          monster: {\n            id: monster.id,\n            name: monster.name,\n            level: monster.level,\n            rank: monster.rank,\n            max_health: monster.health,\n            attack: monster.attack,\n            defense: monster.defense\n          },\n          battle_log: []\n        });\n        setBattleLog([`Battle started against ${monster.name}!`]);\n      }\n    }\n    setLoading(false);\n  };\n\n  const performAction = async (action: string) => {\n    if (!battleState || animating) return;\n    \n    setAnimating(true);\n    try {\n      const response = await api.post(`/battle/${battleState.battle_id}/action`, {\n        action: action\n      });\n      \n      setBattleState(response.data);\n      \n      // Add battle actions to log\n      if (response.data.last_actions) {\n        const newLogs = response.data.last_actions.map((action: any) => action.message);\n        setBattleLog(prev => [...prev, ...newLogs]);\n      }\n      \n      // Check if battle ended\n      if (response.data.status !== 'active') {\n        if (response.data.rewards) {\n          setBattleLog(prev => [...prev, \n            `Battle ended! Rewards: ${response.data.rewards.experience} EXP, ${response.data.rewards.gold} Gold`\n          ]);\n        }\n      }\n      \n    } catch (error: any) {\n      console.error('Failed to perform action:', error);\n      \n      // Mock battle action for demo\n      const newState = { ...battleState };\n      let actionMessage = '';\n      \n      if (action === 'attack') {\n        const damage = Math.floor(Math.random() * 20) + 10;\n        newState.monster_health = Math.max(0, newState.monster_health - damage);\n        actionMessage = `You attack ${newState.monster.name} for ${damage} damage!`;\n        \n        if (newState.monster_health <= 0) {\n          newState.status = 'won';\n          setBattleLog(prev => [...prev, actionMessage, 'Victory! You defeated the monster!']);\n        } else {\n          // Monster counter-attack\n          const monsterDamage = Math.floor(Math.random() * 15) + 5;\n          newState.hunter_health = Math.max(0, newState.hunter_health - monsterDamage);\n          setBattleLog(prev => [...prev, actionMessage, `${newState.monster.name} attacks you for ${monsterDamage} damage!`]);\n          \n          if (newState.hunter_health <= 0) {\n            newState.status = 'lost';\n            setBattleLog(prev => [...prev, 'Defeat! You have been defeated...']);\n          }\n        }\n      } else if (action === 'skill') {\n        const damage = Math.floor(Math.random() * 30) + 20;\n        newState.monster_health = Math.max(0, newState.monster_health - damage);\n        actionMessage = `You use Shadow Strike for ${damage} damage!`;\n        setBattleLog(prev => [...prev, actionMessage]);\n      } else if (action === 'item') {\n        const heal = Math.min(50, 100 - newState.hunter_health);\n        newState.hunter_health += heal;\n        actionMessage = `You use a Health Potion and recover ${heal} HP!`;\n        setBattleLog(prev => [...prev, actionMessage]);\n      } else if (action === 'flee') {\n        newState.status = 'fled';\n        setBattleLog(prev => [...prev, 'You fled from battle!']);\n      }\n      \n      newState.turn += 1;\n      setBattleState(newState);\n    }\n    \n    setTimeout(() => setAnimating(false), 1000);\n  };\n\n  const resetBattle = () => {\n    setBattleState(null);\n    setBattleLog([]);\n  };\n\n  const getRankColor = (rank: string) => {\n    const colors = {\n      'E': 'text-gray-400',\n      'D': 'text-green-400',\n      'C': 'text-blue-400',\n      'B': 'text-purple-400',\n      'A': 'text-yellow-400',\n      'S': 'text-red-400'\n    };\n    return colors[rank as keyof typeof colors] || 'text-gray-400';\n  };\n\n  const getHealthPercentage = (current: number, max: number) => {\n    return Math.max(0, (current / max) * 100);\n  };\n\n  if (battleState) {\n    return (\n      <div className=\"min-h-screen p-4 md:p-6 lg:p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Battle Header */}\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-2 text-white\">⚔️ Battle Arena</h1>\n            <p className=\"text-purple-300\">Turn {battleState.turn}</p>\n          </div>\n\n          {/* Battle Field */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n            {/* Hunter */}\n            <div className=\"card bg-gradient-to-br from-blue-800/20 to-blue-900/20 border-blue-500/30\">\n              <div className=\"text-center mb-4\">\n                <div className={`w-24 h-24 mx-auto mb-4 rounded-full bg-blue-600 flex items-center justify-center ${animating ? 'animate-pulse' : ''}`}>\n                  <SwordIcon className=\"w-12 h-12 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-white\">{battleState.hunter.name}</h3>\n                <p className=\"text-blue-300\">Level {battleState.hunter.level}</p>\n              </div>\n              \n              {/* Hunter Health */}\n              <div className=\"mb-4\">\n                <div className=\"flex justify-between text-sm mb-1 text-gray-300\">\n                  <span>Health</span>\n                  <span>{battleState.hunter_health}/{battleState.hunter.max_health}</span>\n                </div>\n                <div className=\"w-full bg-gray-700 rounded-full h-3\">\n                  <div \n                    className=\"bg-green-500 h-3 rounded-full transition-all duration-500\"\n                    style={{ width: `${getHealthPercentage(battleState.hunter_health, battleState.hunter.max_health)}%` }}\n                  ></div>\n                </div>\n              </div>\n\n              {/* Hunter Stats */}\n              <div className=\"grid grid-cols-2 gap-2 text-sm text-gray-300\">\n                <div className=\"flex items-center\">\n                  <SwordIcon className=\"w-4 h-4 mr-1 text-red-400\" />\n                  <span>{battleState.hunter.attack}</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <ShieldCheckIcon className=\"w-4 h-4 mr-1 text-blue-400\" />\n                  <span>{battleState.hunter.defense}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Battle Actions */}\n            <div className=\"card bg-gradient-to-br from-purple-800/20 to-purple-900/20 border-purple-500/30\">\n              <h3 className=\"text-xl font-bold mb-4 text-center text-white\">Actions</h3>\n              \n              {battleState.status === 'active' ? (\n                <div className=\"space-y-3\">\n                  <button\n                    onClick={() => performAction('attack')}\n                    disabled={animating}\n                    className=\"w-full bg-red-600 hover:bg-red-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center text-white\"\n                  >\n                    <SwordIcon className=\"w-5 h-5 mr-2\" />\n                    Attack\n                  </button>\n                  \n                  <button\n                    onClick={() => performAction('skill')}\n                    disabled={animating}\n                    className=\"w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center text-white\"\n                  >\n                    <SparklesIcon className=\"w-5 h-5 mr-2\" />\n                    Shadow Strike (20 MP)\n                  </button>\n                  \n                  <button\n                    onClick={() => performAction('item')}\n                    disabled={animating}\n                    className=\"w-full bg-green-600 hover:bg-green-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors flex items-center justify-center text-white\"\n                  >\n                    <HeartIcon className=\"w-5 h-5 mr-2\" />\n                    Health Potion (50 Gold)\n                  </button>\n                  \n                  <button\n                    onClick={() => performAction('flee')}\n                    disabled={animating}\n                    className=\"w-full bg-yellow-600 hover:bg-yellow-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors text-white\"\n                  >\n                    Flee Battle\n                  </button>\n                </div>\n              ) : (\n                <div className=\"text-center\">\n                  <p className=\"text-xl mb-4 text-white\">\n                    {battleState.status === 'won' ? '🎉 Victory!' : \n                     battleState.status === 'lost' ? '💀 Defeat!' : \n                     battleState.status === 'fled' ? '🏃 Fled!' : 'Battle Ended'}\n                  </p>\n                  <button\n                    onClick={resetBattle}\n                    className=\"bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg font-semibold transition-colors text-white\"\n                  >\n                    New Battle\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Monster */}\n            <div className=\"card bg-gradient-to-br from-red-800/20 to-red-900/20 border-red-500/30\">\n              <div className=\"text-center mb-4\">\n                <div className={`w-24 h-24 mx-auto mb-4 rounded-full bg-red-600 flex items-center justify-center ${animating ? 'animate-bounce' : ''}`}>\n                  <FireIcon className=\"w-12 h-12 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-white\">{battleState.monster.name}</h3>\n                <p className={`${getRankColor(battleState.monster.rank)} font-semibold`}>\n                  Rank {battleState.monster.rank} • Level {battleState.monster.level}\n                </p>\n              </div>\n              \n              {/* Monster Health */}\n              <div className=\"mb-4\">\n                <div className=\"flex justify-between text-sm mb-1 text-gray-300\">\n                  <span>Health</span>\n                  <span>{battleState.monster_health}/{battleState.monster.max_health}</span>\n                </div>\n                <div className=\"w-full bg-gray-700 rounded-full h-3\">\n                  <div \n                    className=\"bg-red-500 h-3 rounded-full transition-all duration-500\"\n                    style={{ width: `${getHealthPercentage(battleState.monster_health, battleState.monster.max_health)}%` }}\n                  ></div>\n                </div>\n              </div>\n\n              {/* Monster Stats */}\n              <div className=\"grid grid-cols-2 gap-2 text-sm text-gray-300\">\n                <div className=\"flex items-center\">\n                  <SwordIcon className=\"w-4 h-4 mr-1 text-red-400\" />\n                  <span>{battleState.monster.attack}</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <ShieldCheckIcon className=\"w-4 h-4 mr-1 text-blue-400\" />\n                  <span>{battleState.monster.defense}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Battle Log */}\n          <div className=\"card\">\n            <h3 className=\"text-xl font-bold mb-4 text-white\">Battle Log</h3>\n            <div className=\"bg-gray-900/50 rounded-lg p-4 h-40 overflow-y-auto\">\n              {battleLog.map((log, index) => (\n                <p key={index} className=\"text-sm text-gray-300 mb-1\">\n                  {log}\n                </p>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <GameBackground variant=\"battle\">\n      <div className=\"p-4 md:p-6 lg:p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold mb-4 text-white\">⚔️ Battle Arena</h1>\n          <p className=\"text-purple-300 text-lg\">Choose your opponent and prove your strength!</p>\n        </div>\n\n        {/* Monster Selection */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {monsters.map((monster) => (\n            <div key={monster.id} className=\"card hover:border-purple-500/50 transition-colors\">\n              <div className=\"text-center mb-4\">\n                <div className=\"w-20 h-20 mx-auto mb-4\">\n                  <img\n                    src={getRandomBoss()}\n                    alt={monster.name}\n                    className=\"w-full h-full character-image battle-character object-cover\"\n                  />\n                </div>\n                <h3 className=\"text-xl font-bold mb-2 text-white\">{monster.name}</h3>\n                <p className={`${getRankColor(monster.rank)} font-semibold mb-1`}>\n                  Rank {monster.rank}\n                </p>\n                <p className=\"text-gray-400\">Level {monster.level}</p>\n              </div>\n\n              {/* Monster Stats */}\n              <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\n                <div className=\"flex items-center justify-center bg-gray-700/50 rounded-lg p-2\">\n                  <HeartIcon className=\"w-4 h-4 mr-1 text-green-400\" />\n                  <span className=\"text-gray-300\">{monster.health} HP</span>\n                </div>\n                <div className=\"flex items-center justify-center bg-gray-700/50 rounded-lg p-2\">\n                  <SwordIcon className=\"w-4 h-4 mr-1 text-red-400\" />\n                  <span className=\"text-gray-300\">{monster.attack} ATK</span>\n                </div>\n              </div>\n\n              {/* Rewards */}\n              <div className=\"bg-gray-700/30 rounded-lg p-3 mb-4\">\n                <p className=\"text-xs text-gray-400 mb-1\">Rewards:</p>\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-blue-400\">{monster.experience_reward} EXP</span>\n                  <span className=\"text-yellow-400\">{monster.gold_reward} Gold</span>\n                </div>\n              </div>\n\n              {/* Battle Button */}\n              <button\n                onClick={() => startBattle(monster.id)}\n                disabled={loading}\n                className=\"w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 px-4 py-3 rounded-lg font-semibold transition-colors text-white\"\n              >\n                {loading ? 'Starting...' : 'Challenge'}\n              </button>\n            </div>\n          ))}\n        </div>\n\n        {monsters.length === 0 && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-400 text-lg\">Loading monsters...</p>\n          </div>\n        )}\n        </div>\n      </div>\n    </GameBackground>\n  );\n};\n\nexport default BattlePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}