{"ast":null,"code":"import _objectSpread from\"/Users/sebastianni/Downloads/Arise-webgame/web-game/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{apiService}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check for stored auth token on app start\nconst token=localStorage.getItem('arise_token');const userData=localStorage.getItem('arise_user');if(token&&userData){try{const parsedUser=JSON.parse(userData);setUser(_objectSpread(_objectSpread({},parsedUser),{},{access_token:token}));apiService.setAuthToken(token);}catch(error){console.error('Error parsing stored user data:',error);localStorage.removeItem('arise_token');localStorage.removeItem('arise_user');}}setLoading(false);},[]);const login=async(username,password)=>{try{const response=await apiService.login(username,password);const userData={player_id:response.player_id,username:response.username,access_token:response.access_token};setUser(userData);localStorage.setItem('arise_token',response.access_token);localStorage.setItem('arise_user',JSON.stringify({player_id:response.player_id,username:response.username}));apiService.setAuthToken(response.access_token);}catch(error){throw error;}};const register=async(username,email,password)=>{try{await apiService.register(username,email,password);// After successful registration, automatically log in\nawait login(username,password);}catch(error){throw error;}};const logout=()=>{setUser(null);localStorage.removeItem('arise_token');localStorage.removeItem('arise_user');apiService.setAuthToken(null);};const value={user,loading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}export function useAuth(){const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","_objectSpread","access_token","setAuthToken","error","console","removeItem","login","username","password","response","player_id","setItem","stringify","register","email","logout","value","Provider","useAuth","context","Error"],"sources":["/Users/sebastianni/Downloads/Arise-webgame/web-game/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { apiService } from '../services/api';\n\ninterface User {\n  player_id: string;\n  username: string;\n  access_token: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored auth token on app start\n    const token = localStorage.getItem('arise_token');\n    const userData = localStorage.getItem('arise_user');\n    \n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser({ ...parsedUser, access_token: token });\n        apiService.setAuthToken(token);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('arise_token');\n        localStorage.removeItem('arise_user');\n      }\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await apiService.login(username, password);\n      const userData = {\n        player_id: response.player_id,\n        username: response.username,\n        access_token: response.access_token\n      };\n      \n      setUser(userData);\n      localStorage.setItem('arise_token', response.access_token);\n      localStorage.setItem('arise_user', JSON.stringify({\n        player_id: response.player_id,\n        username: response.username\n      }));\n      \n      apiService.setAuthToken(response.access_token);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      await apiService.register(username, email, password);\n      // After successful registration, automatically log in\n      await login(username, password);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('arise_token');\n    localStorage.removeItem('arise_user');\n    apiService.setAuthToken(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}