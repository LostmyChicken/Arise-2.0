{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{io}from'socket.io-client';import{useAuth}from'./useAuth';import{jsx as _jsx}from\"react/jsx-runtime\";const SocketContext=/*#__PURE__*/createContext(undefined);export function SocketProvider(_ref){let{children}=_ref;const[socket,setSocket]=useState(null);const[connected,setConnected]=useState(false);const{user}=useAuth();useEffect(()=>{if(user){// Connect to Socket.IO server\nconst newSocket=io(process.env.REACT_APP_API_URL||'http://localhost:56092',{auth:{token:user.access_token,player_id:user.player_id}});newSocket.on('connect',()=>{console.log('ðŸ”Œ Connected to game server');setConnected(true);});newSocket.on('disconnect',()=>{console.log('ðŸ”Œ Disconnected from game server');setConnected(false);});newSocket.on('connected',data=>{console.log('Welcome message:',data.message);});// Battle events\nnewSocket.on('battle_update',data=>{console.log('Battle update:',data);// Handle battle updates\nwindow.dispatchEvent(new CustomEvent('battle_update',{detail:data}));});// World boss events\nnewSocket.on('world_boss_update',data=>{console.log('World boss update:',data);// Handle world boss updates\nwindow.dispatchEvent(new CustomEvent('world_boss_update',{detail:data}));});// Guild events\nnewSocket.on('guild_update',data=>{console.log('Guild update:',data);// Handle guild updates\nwindow.dispatchEvent(new CustomEvent('guild_update',{detail:data}));});setSocket(newSocket);return()=>{newSocket.close();};}},[user]);const joinRoom=room=>{if(socket){socket.emit('join_room',{room});}};const leaveRoom=room=>{if(socket){socket.emit('leave_room',{room});}};const value={socket,connected,joinRoom,leaveRoom};return/*#__PURE__*/_jsx(SocketContext.Provider,{value:value,children:children});}export function useSocket(){const context=useContext(SocketContext);if(context===undefined){throw new Error('useSocket must be used within a SocketProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsx","_jsx","SocketContext","undefined","SocketProvider","_ref","children","socket","setSocket","connected","setConnected","user","newSocket","process","env","REACT_APP_API_URL","auth","token","access_token","player_id","on","console","log","data","message","window","dispatchEvent","CustomEvent","detail","close","joinRoom","room","emit","leaveRoom","value","Provider","useSocket","context","Error"],"sources":["/Users/sebastianni/Downloads/Arise-webgame/web-game/frontend/src/hooks/useSocket.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { useAuth } from './useAuth';\n\ninterface SocketContextType {\n  socket: Socket | null;\n  connected: boolean;\n  joinRoom: (room: string) => void;\n  leaveRoom: (room: string) => void;\n}\n\nconst SocketContext = createContext<SocketContextType | undefined>(undefined);\n\nexport function SocketProvider({ children }: { children: ReactNode }) {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [connected, setConnected] = useState(false);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (user) {\n      // Connect to Socket.IO server\n      const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:56092', {\n        auth: {\n          token: user.access_token,\n          player_id: user.player_id\n        }\n      });\n\n      newSocket.on('connect', () => {\n        console.log('ðŸ”Œ Connected to game server');\n        setConnected(true);\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('ðŸ”Œ Disconnected from game server');\n        setConnected(false);\n      });\n\n      newSocket.on('connected', (data) => {\n        console.log('Welcome message:', data.message);\n      });\n\n      // Battle events\n      newSocket.on('battle_update', (data) => {\n        console.log('Battle update:', data);\n        // Handle battle updates\n        window.dispatchEvent(new CustomEvent('battle_update', { detail: data }));\n      });\n\n      // World boss events\n      newSocket.on('world_boss_update', (data) => {\n        console.log('World boss update:', data);\n        // Handle world boss updates\n        window.dispatchEvent(new CustomEvent('world_boss_update', { detail: data }));\n      });\n\n      // Guild events\n      newSocket.on('guild_update', (data) => {\n        console.log('Guild update:', data);\n        // Handle guild updates\n        window.dispatchEvent(new CustomEvent('guild_update', { detail: data }));\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [user]);\n\n  const joinRoom = (room: string) => {\n    if (socket) {\n      socket.emit('join_room', { room });\n    }\n  };\n\n  const leaveRoom = (room: string) => {\n    if (socket) {\n      socket.emit('leave_room', { room });\n    }\n  };\n\n  const value = {\n    socket,\n    connected,\n    joinRoom,\n    leaveRoom\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n}\n\nexport function useSocket() {\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}